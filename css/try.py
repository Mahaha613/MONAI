import torch
import numpy as np
import os


# bestArgs
# a = np.array([
#               [0.99867994, 0.2588363, 0.52553314, 0.502583, 0.18985367, 0.24549757],
#               [0.9986353, 0.21159649, 0.5423966, 0.51757854, 0.17874134, 0.26936334],
            #   [0.99836904, 0.23510435, 0.5399717, 0.50654954, 0.20535894, 0.2619659 ],
#               [0.99856496, 0.23295376, 0.5405145, 0.50376403, 0.19924334, 0.22671711],
#               [0.9986336, 0.22567676, 0.5302168, 0.5047526, 0.1791259, 0.233304],
              # [0.9985843, 0.27727354, 0.5246291, 0.48041746, 0.18618971, 0.19828586],      
#               [0.9983883, 0.24201873, 0.53083074, 0.5071462, 0.20028923, 0.25273687],
#               [0.99848443, 0.22908834, 0.54941905, 0.48930034, 0.19162501, 0.2617979],
#               [0.9981267, 0.23086125, 0.53178877, 0.51274693, 0.19982468, 0.27017245],
#               [0.9983959, 0.25210035, 0.53871155, 0.5106099, 0.1622559, 0.26387432],
            #   ])

# bestargs_convMergingV1
# a = np.array([
#               [0.9986853, 0.2326673, 0.53742826, 0.50837505, 0.18076074, 0.26708746],
#               [0.99873775, 0.29591742, 0.52975637, 0.5022711, 0.20030513, 0.22955579],
#               [0.99882287, 0.2095889, 0.5354148, 0.5359424, 0.1671453, 0.2713699 ],
#               [0.9987843, 0.21404329, 0.5549566, 0.52019733, 0.19251506, 0.28011206],
#               [0.9988756, 0.30204362, 0.54911816, 0.5218651, 0.2030111, 0.22212076],
#               [0.99875134, 0.24214993, 0.5204398,  0.52356404, 0.19083919, 0.25536448],
#               [0.9987642, 0.24874511, 0.5169665, 0.49925712, 0.2046195, 0.2523938 ],
#             #   [0.99869114, 0.15325573, 0.53321284, 0.5194388,  0.20421043, 0.26117864],
#             #   [0.9986429, 0.16978994, 0.53880095, 0.5244048, 0.20267785, 0.26731637],
#               [0.998841, 0.20915571, 0.53463084, 0.5233386, 0.16144948, 0.28026345],
#               [0.9986293, 0.24353716, 0.5464398, 0.5104955, 0.18981388, 0.24262755]
#               ])

# bestargs_convMergingV2
# a = np.array([
#               [0.998415, 0.24504867, 0.5587201, 0.51954734, 0.2011223, 0.24427779],
#               [0.9986077, 0.30459425, 0.5474214, 0.51801854, 0.20457971, 0.21810253],
#               [0.9984369, 0.24316588, 0.5146388, 0.5150515, 0.20859893, 0.228985],
#               [0.99811345, 0.299911, 0.49605474, 0.517329, 0.19264007, 0.22416219],
#               [0.99847364, 0.268108, 0.544414, 0.51682806, 0.1950574, 0.24461204],
#               [0.9983063,  0.30225232, 0.4942979, 0.5140834, 0.18440144, 0.23409873],
#               [0.998755, 0.32155198, 0.5204019, 0.51847595, 0.18816046, 0.2112737],
#               [0.99797916, 0.25304648, 0.54084164, 0.5242534,  0.17379323, 0.2424975 ],
#               [0.99791926, 0.35143784, 0.53725827, 0.5151782,  0.19971773, 0.21828277],
#               [0.9978171, 0.2751198,  0.5531959,  0.52984643, 0.1976325,  0.24414428]
#               ])

# MultiScale conv for merging
# a = np.array([
#               [0.9988334,  0.21996965, 0.5412065,  0.5302089,  0.20751862, 0.2535039 ],
#               [0.9986982,  0.19469704, 0.5419778,  0.5303414,  0.19418554, 0.25048557],
#               [0.998739,   0.17656834, 0.5441327,  0.52921844, 0.20530014, 0.25250927],
#               [0.99872845, 0.23653886, 0.5246512,  0.51373106, 0.18853138, 0.22680615],
#               [0.998604,   0.2115283,  0.53868055, 0.51640886, 0.17417878, 0.23209967],
#               [0.99881786, 0.19847819, 0.54762065, 0.5274003,  0.19049548, 0.24143004],      
#               [0.9985121,  0.24353546, 0.5550666,  0.52090275, 0.1878388,  0.22919486],
#               [0.99865097, 0.16152781, 0.5249991,  0.5125369,  0.18429127, 0.23625271],
#               [0.9986915,  0.19013913, 0.5387008,  0.5306858,  0.18577614, 0.2373903 ],
#               [0.99876,    0.18718807, 0.5525951,  0.50933653, 0.1897052, 0.23716071],
#               ])

# Add enc for X3
# a = np.array([
#               [0.99868375, 0.20523652, 0.5285949,  0.5153796,  0.20365061, 0.2512549 ],
#               [0.9987061,  0.2155153,  0.5238106,  0.5081215,  0.19432338, 0.23589158],
#               [0.9986561,  0.15224554, 0.54067034, 0.5219704,  0.20145519, 0.26935592],
#               [0.9987697,  0.2561138,  0.49569023, 0.5075297,  0.19276002, 0.2268909 ],
#               [0.9987635,  0.24361467, 0.50712466, 0.4897012,  0.1896363,  0.25437307],

              
# ])

# # MaxpoolSkip conv change C
# a = np.array([
#               [0.99873567, 0.23871163, 0.5535983,  0.5016361,  0.20186682, 0.2171038 ],
#               [0.99861974, 0.20068242, 0.53929716, 0.5134566,  0.19511229, 0.22626653],
#               [0.9981838,  0.1766025,  0.54186577, 0.5220376,  0.18996686, 0.26557526],
#               [0.9988548,  0.1901397,  0.5673252,  0.49570712, 0.20428614, 0.25282797],
#               [0.9983466,  0.1894602,  0.5270572,  0.50314045, 0.20329198, 0.24360019],

              
# ])

# # AvgpoolSkip dec change C
# a = np.array([
#               [0.998744,   0.12565061, 0.5377342,  0.54047114, 0.2250978,  0.29024535],
#               [0.99869674, 0.14353728, 0.5556709,  0.52588344, 0.20810056, 0.26746047],
#               [0.998679,   0.15541044, 0.53300655, 0.5369964,  0.20711857, 0.24603294],
#               [0.9986791,  0.15541156, 0.5329955,  0.5369792,  0.2070875,  0.2460356 ],
#               [0.9986956,  0.24494328, 0.5390562,  0.5151091,  0.20539539, 0.22671151],            
# ])

# # MaxpoolSkip dec change C
# a = np.array([
#               [0.99891025, 0.15313783, 0.5508349,  0.5259745,  0.19206482, 0.26064584],
#               [0.9983341,  0.07835774, 0.5476847,  0.53937125, 0.20198138, 0.30617043],
#               [0.99872136, 0.12769817, 0.5482377,  0.53353906, 0.21254992, 0.2820602 ],
#               [0.99879485, 0.26973748, 0.55387807, 0.52026373, 0.19530877, 0.1870213 ],
#               [0.9987864,  0.13432564, 0.5465538,  0.541964,   0.20714939, 0.2751888 ],            
# ])

# MaxavgpoolSkip dec change C
a = np.array([
              [0.9988408,  0.20202981, 0.5259737,  0.5253535,  0.21504161, 0.23064159],
              [0.9986773,  0.1716858,  0.5557095,  0.5247802,  0.19938196, 0.24261658],
              [0.9987087,  0.1792602,  0.53876686, 0.5271065,  0.19726847, 0.24094336],
              [0.9988775,  0.19062439, 0.5319979,  0.5275451,  0.19356884, 0.23913187],
              [0.9988052,  0.15517817, 0.537664,  0.52209735, 0.20564176, 0.25526527],            
])
# def format_array_with_commas(a):
#     # 将数组中的每个元素格式化为字符串并加上逗号
#     formatted_rows = [", ".join(f"{x:.8f}" for x in row) for row in a]
#     # 将行用逗号分隔，并加上方括号
#     result = "[\n    [" + "],\n    [".join(formatted_rows) + "]\n]"
#     return result
# a = format_array_with_commas(a)
# res = np.average(a, axis=0)
# print(res)
# print(res[1:].sum() / 5)
# print(res.sum() / 6)




# a = "0.9988334  0.21996965 0.5412065  0.5302089  0.20751862 0.2535039"
# a = a.split(' ')
# a = a = np.array([float(i) for i in a if i != ''])
# print(a)
# assert len(a) == 6, "len(a) != 6"
# print(a.sum() / len(a))

print(len(os.listdir('/home/xiang/user/user_group/caoshangshang/RushBin/MONAI/css/experiment/swim_unetr')))